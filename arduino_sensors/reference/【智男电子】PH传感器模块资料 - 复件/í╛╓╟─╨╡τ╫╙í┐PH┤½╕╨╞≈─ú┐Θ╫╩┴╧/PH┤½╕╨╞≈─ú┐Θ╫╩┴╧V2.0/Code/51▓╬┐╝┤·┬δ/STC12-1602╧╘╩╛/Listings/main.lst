C51 COMPILER V9.00   MAIN                                                                  04/22/2020 20:16:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE User\main.c BROWSE INCDIR(.\User) DEBUG OBJECTEXTEND PRINT(.\Listings\main.
                    -lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /********************(C) COPRIGHT 2019 Crownto electronic **************************
   2           * 文件名  ：main.c
   3           * 描述    ：        
   4           * 硬件连接：
   5           * LCD1602:RS -> P2.0; RW -> P2.1; E -> P2.2;
   6           *         D0~D7 -> P0口
   7           * PH模块: VCC -> 5V; GND -> GND; PO -> P1.1;
   8           * 按键:   key1 -> P2.4; key2 -> P2.5; key3 -> P2.6;
   9           * LED：   LED -> P1.4
  10           * 功能描述：测量PH值液晶显示；
  11                       按键设定PH值上下限值，超过设定范围指示灯亮进行报警
  12                       串口接收测量所得的PH值（波特率9600）；
  13           *           可连接上位机显示PH值；
  14           淘宝店铺地址：https://shop269770855.taobao.com
  15          **********************************************************************************/
  16          #include <STC12C5A60S2.h>
  17          #include <intrins.h>
  18          #include <lcd.h>
  19          
  20          
  21          #define uchar   unsigned char
  22          #define uint    unsigned int
  23          
  24          #define MAIN_Fosc               11059200L       //定义主时钟, 模拟串口和和延时会自动适应。5~35MHZ  22118400L 
  25           
  26          #define ADC_OFF()       ADC_CONTR = 0
  27          #define ADC_ON          (1 << 7)
  28          #define ADC_90T         (3 << 5)
  29          #define ADC_180T        (2 << 5)
  30          #define ADC_360T        (1 << 5)
  31          #define ADC_540T        0
  32          #define ADC_FLAG        (1 << 4)        //软件清0
  33          #define ADC_START       (1 << 3)        //自动清0
  34          #define ADC_CH0         0
  35          #define ADC_CH1         1
  36          #define ADC_CH2         2
  37          #define ADC_CH3         3
  38          #define ADC_CH4         4
  39          #define ADC_CH5         5
  40          #define ADC_CH6         6
  41          #define ADC_CH7         7
  42          
  43          sbit k1 = P2^4;
  44          sbit k2 = P2^5;
  45          sbit k3 = P2^6;
  46          sbit ph_led = P1^4;
  47          
  48          
  49          /**************变量定义***************************/
  50          float PH=0.0;
  51          float PH_value=0.0;
  52          float ph_set1=0.0;
  53          float ph_set2=0.0;
  54          unsigned char disbuff[5]={0}; 
C51 COMPILER V9.00   MAIN                                                                  04/22/2020 20:16:29 PAGE 2   

  55          
  56          
  57          void  DelayUs(unsigned int time);   //延时子函数
  58          void  Delay1(unsigned int time);                 //延时主程序
  59          void  press_k1();
  60          void  press_k2();
  61          void  press_k3();
  62          uint    adc10_start(uchar channel);     //channel = 0~7
  63          int s1;
  64          
  65          
  66          /*
  67           * 函数名：PH_Value_Conversion
  68           * 描述  ：获取PH模块输出电压值
  69           *         
  70           * 输入  ：无
  71           * 输出  ：无
  72           * 说明  ：
  73           */
  74          void PH_Value_Conversion()
  75          {
  76   1                      PH=(PH*5)/1024;
  77   1                PH_value=-5.887*PH+21.677;
  78   1              
  79   1                if((PH_value<=0)){PH_value=0;}
  80   1                      if((PH_value>14)){PH_value=14.1;}
  81   1                      
  82   1                      /*显示酸碱度*/
  83   1                      disbuff[0]=(int)(PH_value*100)/1000+'0';
  84   1                      disbuff[1]=(int)(PH_value*100)%1000/100+'0';    
  85   1                      disbuff[2]='.';
  86   1                      disbuff[3]=(int)(PH_value*100)%100/10+'0';
  87   1                      disbuff[4]=(int)(PH_value*100)%10+'0';
  88   1                      
  89   1                      DisplaySingleChar(0x03,0,disbuff[0]);
  90   1                      DisplaySingleChar(0x04,0,disbuff[1]);
  91   1                      DisplaySingleChar(0x05,0,disbuff[2]);
  92   1                      DisplaySingleChar(0x06,0,disbuff[3]);
  93   1                      DisplaySingleChar(0x07,0,disbuff[4]);           
  94   1      }
  95          
  96          /*
  97           * 函数名：PH_Value_Conversion
  98           * 描述  ：获取PH模块输出电压值
  99           *         
 100           * 输入  ：无
 101           * 输出  ：无
 102           * 说明  ：
 103           */
 104          
 105          void Display_PH1()
 106          {
 107   1              uint ph_h1, ph_h2,ph_h3,ph_h4;
 108   1              ph_h1 = (int)(ph_set1 * 100)/1000;
 109   1              ph_h2 = (int)(ph_set1 * 100)%1000/100;
 110   1              ph_h3 = (int)(ph_set1 * 100)%100/10;
 111   1              ph_h4 = (int)(ph_set1 * 100)%10;
 112   1              DisplaySingleChar(0x00,1,ph_h1+0x30);
 113   1        DisplaySingleChar(0x01,1,ph_h2+0x30);
 114   1              DisplaySingleChar(0x02,1,'.');
 115   1              DisplaySingleChar(0x03,1,ph_h3+0x30);
 116   1              DisplaySingleChar(0x04,1,ph_h4+0x30);   
C51 COMPILER V9.00   MAIN                                                                  04/22/2020 20:16:29 PAGE 3   

 117   1      }
 118          void Display_PH2()
 119          {
 120   1              uint ph_h1, ph_h2,ph_h3,ph_h4;
 121   1              ph_h1 = (int)(ph_set2 * 100)/1000;
 122   1              ph_h2 = (int)(ph_set2 * 100)%1000/100;
 123   1              ph_h3 = (int)(ph_set2 * 100)%100/10;
 124   1              ph_h4 = (int)(ph_set2 * 100)%10;
 125   1              DisplaySingleChar(0x07,1,ph_h1+0x30);
 126   1        DisplaySingleChar(0x08,1,ph_h2+0x30);
 127   1              DisplaySingleChar(0x09,1,'.');
 128   1              DisplaySingleChar(0x0a,1,ph_h3+0x30);
 129   1              DisplaySingleChar(0x0b,1,ph_h4+0x30);   
 130   1      }
 131          /*
 132           * 函数名：main
 133           * 描述  ：主函数
 134           * 输入  ：无
 135           * 输出  ：无
 136           */
 137          void main(void)
 138          {
 139   1               
 140   1              LCDInit();                              //显示屏初始化
 141   1              DisplayString(0x0,0,"  Welcome...  ");
 142   1              DisplayString(0x0,1,"water quality");
 143   1              Delay1(500);
 144   1              WriteCmd(LCD_CLS);
 145   1              P1ASF = 0x07;                   //12C5A60AD/S2系列模拟输入(AD)选择
 146   1              ADC_CONTR = ADC_360T | ADC_ON;
 147   1              ph_set1 = 4.0;
 148   1              ph_set2 = 9.0;  
 149   1              DisplayString(0x0,0,"PH:");
 150   1              while(1)
 151   1              {
 152   2      
 153   2                      press_k1();
 154   2                      press_k2();
 155   2                      press_k3();
 156   2                      Display_PH1();
 157   2                      Display_PH2();
 158   2         //显示设置位置指示符
 159   2                      if (s1 == 0)
 160   2                      {
 161   3                              DisplayString(0x05,1,"*");
 162   3                              DisplayString(0x0c,1," ");
 163   3                      }
 164   2                      if (s1 == 1)
 165   2                      {
 166   3                              DisplayString(0x05,1," ");
 167   3                              DisplayString(0x0c,1,"*");
 168   3                      }
 169   2                      //PH采集转换
 170   2                      PH = adc10_start(1);
 171   2          Delay1(1000);               
 172   2                      PH_Value_Conversion();
 173   2                      //PH上下限判定
 174   2                      if(PH_value>ph_set1 && PH_value<ph_set2)
 175   2                      {
 176   3                              ph_led = 1; //指示灯灭
 177   3                      }
 178   2                      else
C51 COMPILER V9.00   MAIN                                                                  04/22/2020 20:16:29 PAGE 4   

 179   2                      {
 180   3                              ph_led = 0;//指示灯亮
 181   3                      }
 182   2                                                      
 183   2              }
 184   1      }
 185                  
 186          
 187          ///********************* 做一次ADC转换 *******************/
 188          uint    adc10_start(uchar channel)      //channel = 0~7
 189          {
 190   1              uint    adc;
 191   1              uchar   i;
 192   1      
 193   1              ADC_RES = 0;
 194   1              ADC_RESL = 0;
 195   1      
 196   1              ADC_CONTR = (ADC_CONTR & 0xe0) | ADC_START | channel; 
 197   1      
 198   1              i = 250;
 199   1              do{
 200   2                      if(ADC_CONTR & ADC_FLAG)
 201   2                      {
 202   3                              ADC_CONTR &= ~ADC_FLAG;
 203   3                              adc = (uint)ADC_RES;
 204   3                              adc = (adc << 2) | (ADC_RESL & 3);
 205   3                              return  adc;
 206   3                      }
 207   2              }while(--i);
 208   1              return  1024;
 209   1      }
 210          
 211          
 212          //========================================================================
 213          // 描述: 键盘扫描。
 214          void press_k1()         //设置按键扫描子函数     
 215          {
 216   1              if (k1 == 0)
 217   1              {
 218   2                      Delay1(100);
 219   2                      if (k1 == 0)
 220   2                      {
 221   3                              s1++;
 222   3                              if (s1 == 2)
 223   3                              {
 224   4                                      s1 = 0 ;
 225   4                              }
 226   3                      }
 227   2              }
 228   1      }
 229          
 230          void press_k2()         //+按键扫描子函数
 231          {
 232   1       if (k2 == 0)
 233   1              {
 234   2               Delay1(100);
 235   2               if (k2 == 0)
 236   2                {
 237   3                 if (s1 == 0)
 238   3                  {
 239   4                                      ph_set1+=0.01;
 240   4                                      if(ph_set1 > 14.1)
C51 COMPILER V9.00   MAIN                                                                  04/22/2020 20:16:29 PAGE 5   

 241   4                                      {
 242   5                                              ph_set1 = 4;
 243   5                                      }                                       
 244   4                              }
 245   3                       if (s1 == 1)
 246   3                              {
 247   4                                      ph_set2+=0.01;
 248   4                                      if(ph_set2 > 14.1)
 249   4                                      {
 250   5                                              ph_set2 = 9;
 251   5                                      }               
 252   4                              }
 253   3                      }
 254   2              }
 255   1      }
 256          
 257          void press_k3()         //-按键扫描子函数
 258          {
 259   1       if (k3 == 0)
 260   1              {
 261   2               Delay1(100);
 262   2               if (k3 == 0)
 263   2                {
 264   3                 if (s1 == 0)
 265   3                  {
 266   4                                      ph_set1-=0.01;
 267   4                                      if(ph_set1 <= 0)
 268   4                                      {
 269   5                                              ph_set1 = 4;
 270   5                                      }                               
 271   4                              }
 272   3                       if (s1 == 1)
 273   3                              {
 274   4                                      ph_set2-=0.01;
 275   4                                      if(ph_set2 <= 0)
 276   4                                      {
 277   5                                              ph_set2 = 9;
 278   5                                      }
 279   4                              }
 280   3                      }
 281   2              }
 282   1      }
 283          //延时函数//
 284          void Delay1(unsigned int time)
 285          {
 286   1          unsigned int timeCounter = 0;
 287   1              for (timeCounter = time;timeCounter > 0 ;timeCounter --)
 288   1                      DelayUs(255);
 289   1      }
 290          
 291          void DelayUs(unsigned int time)
 292          {
 293   1              unsigned int timeCounter = 0;
 294   1              for (timeCounter = 0;timeCounter < time;timeCounter ++)
 295   1                      _nop_();
 296   1      }
 297          
 298          
 299          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.00   MAIN                                                                  04/22/2020 20:16:29 PAGE 6   

   CODE SIZE        =   1583    ----
   CONSTANT SIZE    =     37    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      27
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
